{
    "acados_include_path": "/home/dolev/acados-install/include",
    "acados_lib_path": "/home/dolev/acados-install/lib",
    "code_export_directory": "/home/dolev/Desktop/Research/OMPL_drones/acados_system/c_generated_code",
    "cython_include_dirs": [
        "/home/dolev/.local/lib/python3.10/site-packages/numpy/core/include",
        "/usr/include/python3.10"
    ],
    "dims": {
        "np": 0,
        "np_global": 0,
        "nu": 4,
        "nx": 24,
        "nz": 0
    },
    "external_function_files_model": [
        "payload_accel_model/payload_accel_expl_ode_fun.c",
        "payload_accel_model/payload_accel_expl_vde_forw.c",
        "payload_accel_model/payload_accel_expl_vde_adj.c"
    ],
    "model": {
        "con_h_expr": [],
        "con_h_expr_0": [],
        "con_h_expr_e": [],
        "con_phi_expr": [],
        "con_phi_expr_0": [],
        "con_phi_expr_e": [],
        "con_r_expr": [],
        "con_r_expr_0": [],
        "con_r_expr_e": [],
        "con_r_in_phi": [],
        "con_r_in_phi_0": [],
        "con_r_in_phi_e": [],
        "cost_conl_custom_outer_hess": [],
        "cost_conl_custom_outer_hess_0": [],
        "cost_conl_custom_outer_hess_e": [],
        "cost_expr_ext_cost": [],
        "cost_expr_ext_cost_0": [],
        "cost_expr_ext_cost_custom_hess": [],
        "cost_expr_ext_cost_custom_hess_0": [],
        "cost_expr_ext_cost_custom_hess_e": [],
        "cost_expr_ext_cost_e": [],
        "cost_psi_expr": [],
        "cost_psi_expr_0": [],
        "cost_psi_expr_e": [],
        "cost_r_in_psi_expr": [],
        "cost_r_in_psi_expr_0": [],
        "cost_r_in_psi_expr_e": [],
        "cost_y_expr": "@1=vertcat((sin(theta_0)*cos(phi_0)), (sin(theta_0)*sin(phi_0)), cos(theta_0)), ((([0, 0, -19.6133]+(mac(([0, 0, -2.45166]+(T_0*mac(horzcat(horzcat((1-(2.*(sq(qy_0)+sq(qz_0)))), (2.*((qx_0*qy_0)-(qz_0*qw_0))), (2.*((qx_0*qz_0)+(qy_0*qw_0))))', horzcat((2.*((qx_0*qy_0)+(qz_0*qw_0))), (1-(2.*(sq(qx_0)+sq(qz_0)))), (2.*((qy_0*qz_0)-(qx_0*qw_0))))', horzcat((2.*((qx_0*qz_0)-(qy_0*qw_0))), (2.*((qy_0*qz_0)+(qx_0*qw_0))), (1-(2.*(sq(qx_0)+sq(qy_0)))))')',[0, 0, 1],zeros(3x1))))',@1,0)*@1))-(0.1*vertcat(vpx, vpy, vpz)))/2)",
        "cost_y_expr_0": "@1=vertcat((sin(theta_0)*cos(phi_0)), (sin(theta_0)*sin(phi_0)), cos(theta_0)), ((([0, 0, -19.6133]+(mac(([0, 0, -2.45166]+(T_0*mac(horzcat(horzcat((1-(2.*(sq(qy_0)+sq(qz_0)))), (2.*((qx_0*qy_0)-(qz_0*qw_0))), (2.*((qx_0*qz_0)+(qy_0*qw_0))))', horzcat((2.*((qx_0*qy_0)+(qz_0*qw_0))), (1-(2.*(sq(qx_0)+sq(qz_0)))), (2.*((qy_0*qz_0)-(qx_0*qw_0))))', horzcat((2.*((qx_0*qz_0)-(qy_0*qw_0))), (2.*((qy_0*qz_0)+(qx_0*qw_0))), (1-(2.*(sq(qx_0)+sq(qy_0)))))')',[0, 0, 1],zeros(3x1))))',@1,0)*@1))-(0.1*vertcat(vpx, vpy, vpz)))/2)",
        "cost_y_expr_e": "vertcat(px, py, pz, quat_pw, quat_px, quat_py, quat_pz, vpx, vpy, vpz, opx, opy, opz, qw_0, qx_0, qy_0, qz_0, wr_0, wp_0, wy_0, theta_0, phi_0, thetaDot_0, phiDot_0)[7:10]",
        "disc_dyn_expr": [],
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "dyn_impl_dae_fun": null,
        "dyn_impl_dae_fun_jac": null,
        "dyn_impl_dae_jac": null,
        "f_expl_expr": "@1=([0, 0, -2.45166]+(T_0*mac(horzcat(horzcat((1-(2.*(sq(qy_0)+sq(qz_0)))), (2.*((qx_0*qy_0)-(qz_0*qw_0))), (2.*((qx_0*qz_0)+(qy_0*qw_0))))', horzcat((2.*((qx_0*qy_0)+(qz_0*qw_0))), (1-(2.*(sq(qx_0)+sq(qz_0)))), (2.*((qy_0*qz_0)-(qx_0*qw_0))))', horzcat((2.*((qx_0*qz_0)-(qy_0*qw_0))), (2.*((qy_0*qz_0)+(qx_0*qw_0))), (1-(2.*(sq(qx_0)+sq(qy_0)))))')',[0, 0, 1],zeros(3x1)))), @2=vertcat((sin(theta_0)*cos(phi_0)), (sin(theta_0)*sin(phi_0)), cos(theta_0)), @3=(mac(@1',@2,0)*@2), @4=mac(horzcat(horzcat((1-(2.*(sq(quat_py)+sq(quat_pz)))), (2.*((quat_px*quat_py)-(quat_pz*quat_pw))), (2.*((quat_px*quat_pz)+(quat_py*quat_pw))))', horzcat((2.*((quat_px*quat_py)+(quat_pz*quat_pw))), (1-(2.*(sq(quat_px)+sq(quat_pz)))), (2.*((quat_py*quat_pz)-(quat_px*quat_pw))))', horzcat((2.*((quat_px*quat_pz)-(quat_py*quat_pw))), (2.*((quat_py*quat_pz)+(quat_px*quat_pw))), (1-(2.*(sq(quat_px)+sq(quat_py)))))')',[0, 0, 0.5],zeros(3x1)), @5=@4[1], @6=@3[2], @7=@4[2], @8=@3[1], @9=@3[0], @10=@4[0], vertcat(vpx, vpy, vpz, (0.5*vertcat((((-(opx*quat_px))-(opy*quat_py))-(opz*quat_pz)), (((opx*quat_pw)+(opy*quat_pz))-(opz*quat_py)), (((opy*quat_pw)-(opx*quat_pz))+(opz*quat_px)), (((opx*quat_py)-(opy*quat_px))+(opz*quat_pw)))), ((([0, 0, -19.6133]+@3)-(0.1*vertcat(vpx, vpy, vpz)))/2), (\n[[0.833333, 0, 0], \n [0, 0.833333, 0], \n [0, 0, 1.33333]]\\vertcat(((@5*@6)-(@7*@8)), ((@7*@9)-(@10*@6)), ((@10*@8)-(@5*@9)))), (0.5*vertcat((((-(wr_0*qx_0))-(wp_0*qy_0))-(wy_0*qz_0)), (((wr_0*qw_0)+(wp_0*qz_0))-(wy_0*qy_0)), (((wp_0*qw_0)-(wr_0*qz_0))+(wy_0*qx_0)), (((wr_0*qy_0)-(wp_0*qx_0))+(wy_0*qw_0)))), (\n[[0.00250833, 0, 0], \n [0, 0.00250833, 0], \n [0, 0, 0.005]]\\(vertcat(taux_0, tauy_0, tauz_0)-(0.01*vertcat(wr_0, wp_0, wy_0)))), thetaDot_0, phiDot_0, (2.*mac(@1',vertcat((cos(theta_0)*cos(phi_0)), (cos(theta_0)*sin(phi_0)), (-sin(theta_0))),0)), (2.*mac(@1',vertcat((-sin(phi_0)), cos(phi_0), 0),0)))",
        "f_impl_expr": [],
        "gnsf_nontrivial_f_LO": 1,
        "gnsf_purely_linear": 0,
        "name": "payload_accel",
        "nu_original": null,
        "p": "0x1",
        "p_global": "0x1",
        "t": [],
        "t0": null,
        "t_label": "t",
        "u": "vertcat(T_0, taux_0, tauy_0, tauz_0)",
        "u_labels": null,
        "x": "vertcat(px, py, pz, quat_pw, quat_px, quat_py, quat_pz, vpx, vpy, vpz, opx, opy, opz, qw_0, qx_0, qy_0, qz_0, wr_0, wp_0, wy_0, theta_0, phi_0, thetaDot_0, phiDot_0)",
        "x_labels": null,
        "xdot": "xdot",
        "z": "0x1"
    },
    "parameter_values": [],
    "problem_class": "SIM",
    "shared_lib_ext": ".so",
    "simulink_opts": null,
    "solver_options": {
        "Tsim": 0.01,
        "collocation_type": "GAUSS_LEGENDRE",
        "ext_fun_compile_flags": "-O2",
        "ext_fun_expand_dyn": false,
        "integrator_type": "ERK",
        "num_threads_in_batch_solve": 1,
        "output_z": true,
        "sens_adj": false,
        "sens_algebraic": false,
        "sens_forw": true,
        "sens_hess": false,
        "sim_method_jac_reuse": 0,
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": 4,
        "sim_method_num_steps": 1,
        "with_batch_functionality": false
    }
}